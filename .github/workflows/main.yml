name: MLOps Azure animals classification pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  GROUP: mlops-labo3-tibe
  WORKSPACE: mlops
  LOCATION: westeurope
  CREATE_COMPUTE: true

jobs:
  azure-pipeline:
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    steps:
      - name: 'Checkout out repository'
        uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Run az commands'
        uses: azure/CLI@v1
        id: azure-ml-compute
        if: ${{ env.CREATE_COMPUTE == 'true' }}
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml compute create --file ./environment/compute.yaml
      
      - name: 'Start compute'
        uses: azure/CLI@v1
        id: azure-ml-compute-start
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml compute start --name mlopsc-cli
        continue-on-error: true

      - name: 'Run pipeline'
        uses: azure/CLI@v1
        id: azure-ml-pipeline
        if: always()
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml job create --file ./pipelines/animals-classification.yaml --set name=animals-classification-${{ github.sha }}-${{ github.run_id }} --stream
            echo "Pipeline Done"
            VERSION=$(az ml model list -n animals-classification --query '[0].version')
            echo "Latest version is $VERSION"
            echo "::set-output name=latest_version::$VERSION"

      - name: 'Cleanup Azure Stop compute'
        uses: azure/CLI@v1
        id: azure-ml-compute-stop
        if: always()
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml compute stop -n mlopsc-cli
        continue-on-error: true

      - name: Download model
        uses: azure/CLI@v1
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml model download --name animals-classification --download-path ./inference --version "${{ steps.azure-ml-pipeline.outputs.latest_version }}" 

      - name: Move model
        run: |
            ls inference
            mv inference/animals-classification/INPUT_model_path/animal-cnn inference 

      - name: Build Docker file
        run: |
            docker build -t demeulemeestertibe/mlops-animals-api:${{ github.run_id }} ./inference
            docker login --username demeulemeestertibe --password ${{ secrets.DOCKER_PWD }}
            docker push demeulemeestertibe/mlops-animals-api:${{ github.run_id }}
            
      - name: Build nad push to GHCR
        run: |
            docker tag demeulemeestertibe/mlops-animals-api 
            docker push ghcr.io/demeulemeestertibe/mlops-animals-api